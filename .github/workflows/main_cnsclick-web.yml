name: Build and Deploy to Azure

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Prepare standalone deployment
        run: |
          rm -rf deploy
          mkdir deploy

          cp -r .next/standalone/* deploy/

          mkdir -p deploy/.next/static
          cp -r .next/static/* deploy/.next/static/

          if [ -d "public" ]; then
            cp -r public deploy/
          fi

          if [ -f "deploy/server.js" ]; then
            echo "Standalone server.js found"
            head -5 deploy/server.js
          else
            echo "No server.js found in standalone build"
            exit 1
          fi

      - name: Create Azure config files
        run: |
          cat > deploy/web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode"/>
              </handlers>
              <rewrite>
                <rules>
                  <rule name="StaticContent">
                    <conditions>
                      <add input="{REQUEST_URI}" pattern="^/(.*)$"/>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile"/>
                    </conditions>
                    <action type="None"/>
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                  </rule>
                </rules>
              </rewrite>
              <httpErrors existingResponse="PassThrough"/>
            </system.webServer>
          </configuration>
          EOF

          echo "Deployment package ready"
          ls -la deploy/

      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: standalone-app
          path: deploy/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: standalone-app
          path: ./

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_84D51615455148859A3FE23E4ABF79F7 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0993BE89D9AA4E45A7A6EE08AE3542F4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A2ED51F936DE469B8F1A011FB06A2AF4 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'cnsclick-web'
          package: ./
