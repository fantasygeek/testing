# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
name: Build and deploy Node.js app to Azure Web App - cnsclick-web

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  ZIP_NAME: nextapp.zip
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

            - name: Clean previous deploy folder if any
        run: |
          rm -rf deploy && mkdir deploy
      - name: Copy runtime assets to deploy folder
        run: |
          rsync -av --progress .next node_modules package.json
          echo "Contents of deploy folder:"
          find deploy -type f
      - name: Confirm next binary is installed and in node_modules/.bin
        run: |
          echo "Checking for node_modules/.bin/next:"
          if [ -f node_modules/.bin/next ]; then
            echo "Found: node_modules/.bin/next"
          else
            echo "Missing: node_modules/.bin/next"
            exit 1
          fi
          echo "Checking resolved path of 'next' using yarn:"
          if ! PATH=node_modules/.bin:$PATH which next; then
            echo "'next' not found in PATH"
            exit 1
          fi
          echo "Running 'next --version' to confirm execution:"
          if ! PATH=node_modules/.bin:$PATH next --version; then
            echo "Failed to run 'next --version'"
            exit 1
          fi
      - name: Create deployment ZIP package
        run: |
          cd deploy
          zip -r ../${ZIP_NAME} .
          cd ..
      - name: Inspect ZIP contents for Next.js CLI
        run: |
          echo "Checking if ZIP was created:"
          if ! ls -lh "${ZIP_NAME}"; then
            echo "ZIP not found"
            exit 1
          fi
          echo "Checking for 'node_modules/next/dist/bin/' directory:"
          if unzip -l "${ZIP_NAME}" | grep -q "node_modules/next/dist/bin/"; then
            echo "Directory found"
          else
            echo "Directory not found"
            exit 1
          fi
          echo "Checking for 'next' CLI binary:"
          if unzip -l "${ZIP_NAME}" | grep -q "node_modules/next/dist/bin/next"; then
            echo "'next' CLI binary found"
          else
            echo "'next' CLI binary missing"
            exit 1
          fi

      # - name: Check if .next folder exists
      #   run: |
      #     if [ -d ".next" ]; then
      #       echo "✅ .next folder found. Here's what's inside:"
      #       ls -R .next
      #     else
      #       echo "❌ .next folder not found."
      #       exit 1
      #     fi

      # - name: copy standalone folder
      #   run: |
      #     cp -R ./public ./.next/standalone/public
      #     cp -R ./.next/static ./.next/standalone/.next/static

      # - name: Zip artifact for deployment
      #   run: |
      #     mkdir -p package/.next
      #     if [ -d ".next/standalone" ]; then
      #       cp -R .next/standalone/* package/
      #     fi
      #     if [ -d ".next/static" ]; then
      #       cp -R .next/static package/.next/static
      #     fi
      #     if [ -d "public" ]; then
      #       cp -R public package/public
      #     fi
      #     cd package
      #     zip -r app.zip . -x "*.git*" -x "node_modules/*"

      # - name: Upload artifact for deployment job
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app
      #     path: .next/standalone

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: app
          path: ./app

      # - name: Unzip artifact for deployment
      #   run: unzip app.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_84D51615455148859A3FE23E4ABF79F7 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0993BE89D9AA4E45A7A6EE08AE3542F4 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A2ED51F936DE469B8F1A011FB06A2AF4 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'cnsclick-web'
          slot-name: 'Production'
          package: ${{ env.ZIP_NAME }}
